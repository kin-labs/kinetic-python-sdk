name: test

on:
  pull_request:
  push:
    branches:
      - dev
      - main

jobs:
  main:
    runs-on: ubuntu-22.04
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: prisma
          POSTGRES_USER: prisma
          POSTGRES_PASSWORD: prisma
        ports: [ '5432:5432' ]
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis:7-alpine
        ports: ['6379:6379']
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5
      solana:
        image: ghcr.io/kin-labs/kinetic-solana-network:latest
        ports: [ '8899:8899', '8900:8900' ]
      kinetic:
        image: ghcr.io/kin-labs/kinetic:dev
        ports:
          - 3000:3000
        options: --health-cmd "wget localhost:3000/api/uptime -q -O - > /dev/null 2>&1" --health-interval 10s --health-timeout 5s --health-retries 5
        env:
          API_URL: 'http://localhost:3000'
          APP_1_FEE_PAYER_SECRET: 'UvfuF3FPqLyvS8xGjSu4AUfdsY5QvLdnin8SKBLAi3UqgbmEWCDshPY3UcxvBgRAqHLzh5Ni1eypLVZArsis6FF'
          APP_1_NAME: 'App 1'
          AUTH_USERS: 'alice|Kinetic@alice1|Admin,bob|Kinetic@bob1'
          AUTH_PASSWORD_ENABLED: true
          DATABASE_URL: 'postgresql://prisma:prisma@postgres:5432/prisma?schema=kinetic'
          JWT_SECRET: 'KineticJwtSecret!'
          NX_CLOUD_DISTRIBUTED_EXECUTION: false
          REDIS_URL: 'redis://redis:6379'
          SOLANA_LOCAL_ENABLED: true
          SOLANA_LOCAL_MINT_KIN: '*MoGaMuJnB3k8zXjBYBnHxHG47vWcW3nyb7bFYvdVzek,5,Kin'
          SOLANA_LOCAL_MINT_KIN_AIRDROP_SECRET: 'UvfuF3FPqLyvS8xGjSu4AUfdsY5QvLdnin8SKBLAi3UqgbmEWCDshPY3UcxvBgRAqHLzh5Ni1eypLVZArsis6FF'
          SOLANA_LOCAL_MINT_USDC: '*USDzo281m7rjzeZyxevkzL1vr5Cibb9ek3ynyAjXjUM,2,USDC'
          SOLANA_LOCAL_MINT_USDC_AIRDROP_SECRET: 'UvfuF3FPqLyvS8xGjSu4AUfdsY5QvLdnin8SKBLAi3UqgbmEWCDshPY3UcxvBgRAqHLzh5Ni1eypLVZArsis6FF'
          SOLANA_LOCAL_RPC_ENDPOINT: 'http://solana:8899'
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Set up the cache
        uses: actions/cache@v1
        env:
          cache-name: cache-python-packages
        with:
          path: .venv
          key: ubuntu-22-04-3.10-${{ env.cache-name }}
          restore-keys: |
            ubuntu-22-04-3.10-
            ubuntu-22-04-
      - name: Set up the project
        run: |
          pip install poetry
          poetry config virtualenvs.in-project true
          make install
      - run: make test
